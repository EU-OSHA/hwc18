<?php
/**
 * @file
 * Code for the HWC Toolkit feature.
 */

include_once 'hwc_toolkit.features.inc';

/**
 * Implements hook_block_info().
 */
function hwc_toolkit_block_info() {
  $blocks = array();
  $blocks['toolkit_left_menu'] = array(
    'info' => t('Toolkit left menu'),
    'status' => 1,
    'region' => 'sidebar_first',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'cache' => DRUPAL_CACHE_GLOBAL,
    'weight' => 0,
  );
  $blocks['toolkit_nav'] = array(
    'info' => t('Toolkit next prev buttons'),
    'status' => 1,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'cache' => DRUPAL_CACHE_GLOBAL,
    'weight' => 0,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function hwc_toolkit_block_view($delta = '') {
  $active_id = NULL;
  if (arg(0) == 'taxonomy') {
    $active_id = arg(2);
  }
  else {
    $active_id = arg(1);
  }

  $block = array();
  if ($delta == 'toolkit_left_menu') {
    $menu = hwc_toolkit_get_left_menu($active_id);
    $block['content'] = array(
      '#type' => 'markup',
      '#markup' => theme('toolkit_menu',
        array(
          'menu' => $menu,
          'active' => $active_id,
        )
      ),
    );
  }
  if ($delta == 'toolkit_nav') {
    hwc_toolkit_get_left_menu($active_id);
    $markup = theme('toolkit_navigation', ['nid' => $active_id]);
    $block['content'] = array(
      '#type' => 'markup',
      '#markup' => $markup,
    );
  }
  return $block;
}

function hwc_toolkit_prepare_link($titleLink) {
  $titleLink = str_replace(' ', '-', $titleLink);
  $titleLink = str_replace('&', '-', $titleLink);
  $titleLink = str_replace(',', '', $titleLink);
  $titleLink = str_replace('.', '', $titleLink);
  $titleLink = str_replace('(', '', $titleLink);
  $titleLink = str_replace('[', '', $titleLink);
  $titleLink = str_replace(']', '', $titleLink);
  $titleLink = str_replace('>', '', $titleLink);
  return $titleLink;
}

/**
 * Implements hook_theme().
 */
function hwc_toolkit_theme($existing, $type, $theme, $path) {
  $theme = array();
  $theme['toolkit_menu'] = array(
    'template' => 'templates/hwc_toolkit_menu',
    'variables' => array(
      'menu' => [],
      'active' => NULL,
    ),
  );
  $theme['toolkit_navigation'] = array(
    'template' => 'templates/hwc_toolkit_navigation',
    'variables' => array(
      'nid' => NULL,
    ),
  );
  return $theme;
}

function _toolkit_menu_item($title, $path = NULL, $type = 'node') {
  $item = [
    'title' => $title,
    'children' => [],
    'path' => $path,
    'type' => $type,
  ];
  $item['class'] = hwc_toolkit_prepare_link(strtolower($title));
  if ($path) {
    $item['href'] = url($path);
  }
  else {
    $item['href'] = '#' . $item['class'];
  }
  return $item;
}

function hwc_toolkit_menu_breadcrumbs($breadcrumb = NULL) {
  static $breadcrumbs = [];
  if ($breadcrumb) {
    $breadcrumbs[] = $breadcrumb;
  }
  return $breadcrumbs;
}

/**
 * Implements hook_views_pre_render().
 */
function hwc_toolkit_views_pre_render(&$view) {
  if ($view->name == 'tool_examples_carousel') {
    hwc_toolkit_examples_result_count(count($view->result));
  }
}

function hwc_toolkit_examples_result_count($add = 0) {
  static $total = 0;
  $total += $add;
  return $total;
}

function hwc_toolkit_get_menu_tree($level1) {
  static $menu = [];
  if ($menu) {
    return $menu;
  }
  $tools = views_get_view_result('menu_tk_tools');

  $tools_examples_nid = NULL;

  foreach ($level1 as $article) {
    $w = entity_metadata_wrapper('node', $article);
    $l1_nid = $article->nid;
    $l1_title = $w->title->value();
    $menu[$l1_nid] = _toolkit_menu_item($l1_title, 'node/' . $l1_nid);

    $articles = $w->field_tk_article->value();
    if ($articles) {
      foreach ($articles as $tk_article) {
        $wrapper = entity_metadata_wrapper('node', $tk_article);
        $l2_nid = $tk_article->nid;
        $l2_title = $wrapper->title->value();
        $menu[$l1_nid]['children'][$l2_nid] = _toolkit_menu_item($l2_title, 'node/' . $l2_nid);

        $topics = $wrapper->field_tk_topics->value();
        if ($topics) {
          foreach ($topics as $tk_topic) {
            $wrapper = entity_metadata_wrapper('node', $tk_topic);
            $l3_nid = $tk_topic->nid;
            $l3_title = $wrapper->title->value();
            $menu[$l1_nid]['children'][$l2_nid]['children'][$l3_nid] = _toolkit_menu_item($l3_title, 'node/' . $l3_nid);
          }
        }
      }
    }

    $terms = $w->field_tools_examples->value();
    if ($terms) {
      $tools_nid = $l1_nid;
      foreach ($terms as $tk_term) {
        $wrapper = entity_metadata_wrapper('taxonomy_term', $tk_term);
        $l2_tid = $tk_term->tid;
        $l2_title = $wrapper->name->value();
        $menu[$l1_nid]['children'][$l2_tid] = _toolkit_menu_item($l2_title, 'taxonomy/term/' . $l2_tid, 'taxonomy');
      }
    }
  }

  foreach ($tools as $tool) {
    $l2_tid = $tool->field_field_tk_tool_type[0]['raw']['tid'];
    $l3_nid = $tool->nid;
    $l3_title = $tool->node_title;
    $menu[$tools_nid]['children'][$l2_tid]['children'][$l3_nid] = _toolkit_menu_item($l3_title, 'node/' . $l3_nid);
  }
  return $menu;
}

function hwc_toolkit_nav_next($nid) {
  $nav = hwc_toolkit_nav();
  return @$nav[$nid]['next'];
}

function hwc_toolkit_nav_prev($nid) {
  $nav = hwc_toolkit_nav();
  return @$nav[$nid]['prev'];
}

function hwc_toolkit_nav($_nav = NULL) {
  static $nav = [];
  if ($_nav) {
    $nav = $_nav;
  }
  return $nav;
}

function hwc_toolkit_get_left_menu($active_id) {
  static $menu = [];
  if ($menu) {
    return $menu;
  }

/*
  $active_id = NULL;
  if (arg(0) == 'taxonomy') {
    $active_id = arg(2);
  }
  else {
    $active_id = arg(1);
  }
*/

  $q = db_select('node', 'n');
  $q->fields('n', ['nid']);
  $q->condition('n.type', 'tk_section');
  $rs = $q->execute()->fetchAll();
  $l0_nid = $rs[0]->nid;
  $node = node_load($l0_nid);
  $wt = entity_metadata_wrapper('node', $node);
  $l0_title = $wt->title->value();
  $level1 = $wt->field_tk_article->value();

  $menu = hwc_toolkit_get_menu_tree($level1);
  $nav = [];

  $prev1_id = NULL;
  $prev2_id = NULL;
  $prev3_id = NULL;

  $prev[1] = NULL;
  $prev[2] = NULL;
  $prev[3] = NULL;

  $l1_pages = array_keys($menu);
  $first = $l1_pages[0];
  $last = $l1_pages[count($l1_pages) - 1];

  $lo_link = l($l0_title, 'node/' . $active_id);
  foreach ($menu as $l1_id => $menu_item1) {
    $current[1] = $menu_item1;
    if ($prev1_id) {
      if (($first != $prev1_id)) {
        $nav[$prev1_id]['next'] = hwc_toolkit_nav_item($current[1]);
      }
      if ($last != $l1_id) {
        $nav[$l1_id]['prev'] = hwc_toolkit_nav_item($prev[1]);
      }
    }
    $prev1_id = $l1_id;
    $prev[1] = $menu_item1;

    if ($active_id == $l1_id) {
      $menu[$l1_id]['class'] .= ' active';
      $menu[$l1_id]['active'] = TRUE;
      hwc_toolkit_menu_breadcrumbs($lo_link);
      hwc_toolkit_menu_breadcrumbs($menu_item1['title']);
    }
    foreach ($menu_item1['children'] as $l2_id => $menu_item2) {
      $current[2] = $menu_item2;
      if ($prev2_id) {
        $nav[$prev2_id]['next'] = hwc_toolkit_nav_item($current[2]);
        $nav[$l2_id]['prev'] = hwc_toolkit_nav_item($prev[2]);
      }
      $prev2_id = $l2_id;
      $prev[2] = $menu_item2;

      if ($active_id == $l2_id) {
        $menu[$l1_id]['children'][$l2_id]['class'] .= ' active';
        $menu[$l1_id]['class'] .= ' active';

        $menu[$l1_id]['children'][$l2_id]['active'] = TRUE;
        $menu[$l1_id]['active'] = TRUE;
        hwc_toolkit_menu_breadcrumbs($lo_link);
        hwc_toolkit_menu_breadcrumbs(l($menu[$l1_id]['title'], $menu[$l1_id]['href']));
        hwc_toolkit_menu_breadcrumbs($menu_item2['title']);
        if ('taxonomy' == $menu_item2['type']) {
          drupal_set_breadcrumb(hwc_toolkit_menu_breadcrumbs());
        }
      }
      foreach ($menu_item2['children'] as $l3_id => $menu_item3) {
        $current[3] = $menu_item3;
        if ($prev3_id) {
          $nav[$prev3_id]['next'] = hwc_toolkit_nav_item($current[3]);
          $nav[$l3_id]['prev'] = hwc_toolkit_nav_item($prev[3]);
        }
        $prev3_id = $l3_id;
        $prev[3] = $menu_item3;

        if ($active_id == $l3_id) {
          $menu[$l1_id]['children'][$l2_id]['children'][$l3_id]['class'] .= ' active';
          $menu[$l1_id]['children'][$l2_id]['class'] .= ' active';
          $menu[$l1_id]['class'] .= ' active';

          $menu[$l1_id]['children'][$l2_id]['children'][$l3_id]['active'] = TRUE;
          $menu[$l1_id]['children'][$l2_id]['active'] = TRUE;
          $menu[$l1_id]['active'] = TRUE;

          hwc_toolkit_menu_breadcrumbs($lo_link);
          hwc_toolkit_menu_breadcrumbs(l($menu[$l1_id]['title'], $menu[$l1_id]['href']));
          hwc_toolkit_menu_breadcrumbs(l($menu[$l1_id]['children'][$l2_id]['title'], $menu[$l1_id]['children'][$l2_id]['href']));
          hwc_toolkit_menu_breadcrumbs($menu_item3['title']);
        }

      }
    }
  }
  hwc_toolkit_nav($nav);
  return $menu;
}

function hwc_toolkit_nav_item($menu_item) {
  return ['href' => $menu_item['href'], 'title' => $menu_item['title']];
}