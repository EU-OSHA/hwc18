<?php

/**
 * @file
 * Xmlsitemap Bulk link exclude.
 */

/**
 * Creates menus for various settings pages.
 */
function xml_sitemap_bulk_link_exclude_menu() {
  $items = array();

  $items['admin/config/search/xml_sitemap_bulk_exclude'] = array(
    'title' => 'Xml Sitemap Bulk link exclude',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('xml_sitemap_bulk_link_exclude_form'),
    'file' => 'includes/xml_sitemap_link_exlude.admin.inc',
    'access arguments' => array('administer site configuration'),
  );

  $items['admin/config/search/list/xml_exclude_links'] = array(
    'title' => 'Xml Sitemap Bulk link exclude table',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('xml_sitemap_bulk_link_exclude_table_form'),
    'file' => 'includes/xml_sitemap_link_exlude.admin.inc',
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

/**
 * Implements hook_help().
 */
function xml_sitemap_bulk_link_exclude_help($path, $arg) {
  switch ($path) {
    case 'admin/help#xml_sitemap_bulk_link_exclude':

      $filepath = dirname(__FILE__) . '/README.md';
      if (file_exists($filepath)) {
        $readme = file_get_contents($filepath);
      }
      else {
        $filepath = dirname(__FILE__) . '/README.txt';
        if (file_exists($filepath)) {
          $readme = file_get_contents($filepath);
        }
      }
      if (!isset($readme)) {
        return NULL;
      }
      if (module_exists('markdown')) {
        $filters = module_invoke('markdown', 'filter_info');
        $info = $filters['filter_markdown'];

        if (function_exists($info['process callback'])) {
          $output = $info['process callback']($readme, NULL);
        }
        else {
          $output = '<pre>' . $readme . '</pre>';
        }
      }
      else {
        $output = '<pre>' . $readme . '</pre>';
      }

      return $output;
  }
}
